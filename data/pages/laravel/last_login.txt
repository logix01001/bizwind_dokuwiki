<file php UpdateUserLastLoginDate.php>
<?php

namespace App\Events;

use Illuminate\Auth\Events\Login;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Queue\InteractsWithQueue;
use Carbon\Carbon;
class UpdateUserLastLoginDate
{
    /**
     * Create the event listener.
     *
     * @return void
     */
    public function __construct()
    {
        //
    }

    /**
     * Handle the event.
     *
     * @param  Login  $event
     * @return void
     */
    public function handle(Login $event)
    {
        try {
            $user = $event->user;
            $user->last_login = Carbon::now()->toDateTimeString();
            $user->last_login_ip = request()->getClientIp();
            $user->save();
        } catch (\Throwable $th) {
            report($th);
        }
    }
}
</file>



====== Add this to eventServiceprovider ======

<code>
<?php

namespace App\Providers;


/** ***/
use Illuminate\Auth\Events\Login;
use App\Events\UpdateUserLastLoginDate;
/** ***/

class EventServiceProvider extends ServiceProvider
{
    /**
     * The event listener mappings for the application.
     *
     * @var array
     */
    protected $listen = [
       /** ***/
        Login::class => [
            UpdateUserLastLoginDate::class
        ],
/** ***/

    ];

  
}
</code>
