a:2:{s:7:"current";a:8:{s:4:"date";a:2:{s:7:"created";i:1655177563;s:8:"modified";i:1655177563;}s:11:"last_change";a:8:{s:4:"date";i:1655177563;s:2:"ip";s:3:"::1";s:4:"type";s:1:"C";s:2:"id";s:18:"laravel:last_login";s:4:"user";s:0:"";s:3:"sum";s:7:"created";s:5:"extra";s:0:"";s:10:"sizechange";i:1295;}s:4:"user";s:0:"";s:7:"creator";s:0:"";s:5:"title";s:32:"Add this to eventServiceprovider";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:32:"add_this_to_eventserviceprovider";s:5:"title";s:32:"Add this to eventServiceprovider";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:503:"<?php

namespace App\Events;

use Illuminate\Auth\Events\Login;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Queue\InteractsWithQueue;
use Carbon\Carbon;
class UpdateUserLastLoginDate
{
    /**
     * Create the event listener.
     *
     * @return void
     */
    public function __construct()
    {
        //
    }

    /**
     * Handle the event.
     *
     * @param  Login  $event
     * @return void
     */
    public function handle(Login $event)
    {
        try {
       â€¦";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:1:{s:7:"created";i:1655177563;}s:11:"last_change";a:8:{s:4:"date";i:1655177563;s:2:"ip";s:3:"::1";s:4:"type";s:1:"C";s:2:"id";s:18:"laravel:last_login";s:4:"user";s:0:"";s:3:"sum";s:7:"created";s:5:"extra";s:0:"";s:10:"sizechange";i:1295;}s:4:"user";s:0:"";s:7:"creator";s:0:"";}}